# Fichier de configuration: snmp.conf
# Traduction: Jean-François ORNECH
# Version basée sur le man du 29 Jun 2005
#
# Ce fichier paramètre le comportement du démon snmpd, snmptrapd ainsi que la configuration des MIB à utiliser.
#


# ------------------------------------------
# Configuration du comportement client
# ------------------------------------------

# - Domaine (protocole de transport) par défaut pour toutes les applications SNMP (UDP par défaut).
# - Valeur possible (udp ou tcp)
# defDomain udp application

# - Cible par défaut pour les connexions à une application spécifique
# defTarget application udp 127.0.0.1:161

# - Définit le port UDP sur lequel le client SNMP tentera d'envoyer ses réponses (UDP 161 par défaut)
# defaultPort 161

# - Version du protocole SNMP par défaut utilisé (1, 2c ou 3)
# - Ce paramètre peut être supplenté par l'option -v
# defVersion 2c

# - Définit la Communauté SNMP par défaut pout les requêtes SNMPv1 and SNMPv2c.
# - Ce paramètre peut être supplenté par l'option -c
defCommunity public

# - Permet la définition d'alias afin de simplifier les connexions à un hôte.
# - Pertinant avec adresses IPv6 du fait de leur longueur.
# - Exemple d'utilisation d"un alias: "snmpget -v2c -c public alias:switch sysName.0" au lieu de "snmpget -v2c -c public udp:10.10.10.1:6161 sysName.0"
# alias switch udp:10.10.10.1:6161

# - Afficher une copie à l'état brut (en hexadécimale) des requêtes SNMP envoyées et reçues
# dumpPacket yes

# - Activer le débogage pour les applications SNMP ( 1 ou 0)
# doDebugging 1

# - Tokens ou Eléments (Domaine SNMP) de débogage à activer
# - Tokens SNMP possibles:
# -  snmp: Débogage général du protocole SNMP.
# -  usm: Débogage du module de sécurité USM (User-based Security Model).
# -  vacm: Débogage du module de contrôle d'accès VACM (View-based Access Control Model).
# -  trap: Débogage des messages SNMP Trap et Inform.
# -  agent: Débogage de l'agent SNMP.
# -  pdu: Débogage des unités de données de protocole (PDU) SNMP.
# -  mib: Débogage des modules d'information de gestion (MIB
# debugTokens mib, trap

# - Limite les identifiants de requête SNMP (Request IDs) à 16 bits.
# - Corrige les problèmes de compatibilité d'agents SNMP incapables de gérer des "Request IDs" de 32 bits
# 16bitIDs yes

# - IP source utilisée pour l'emmission de requêtes SNMP
# - Cette option permet de mentionner une IP source différente pour l'emmission d'une requête SNMP.
# clientaddr 127.0.0.1

# - "clientRecvBuf" permet de spécifier la taille du tampon (buffer) à utiliser pour stocker les réponses aux requêtes SNMP
# - Notez que si la  taille du tampon imposée par le système d'exploitation est inférieure,  "clientRecvBuf" sera ignoré.
# clientRecvBuf 4096

# - Taille du tampon d'envoi client (similiare à clientRecvBuf)
# clientSendBuf 4096

# - Désactive la vérification des index et des valeurs définis dans la MIB avant l'envoi des commandes SNMP à  un agent distant.
# - Cela permet d'envoyer les commandes directement à l'agent distant sans vérification locale préalable.
# - Utile pour déboguer et diagnostiquer des problèmes de communication SNMP.
# noRangeCheck yes

# - Désactive les avertissements émis par le démon SNMP (snmpd) lorsqu'il rencontre des tokens inconnus dans le fichier de configuration.
# noTokenWarnings

# - Contrôle le sens de l'encodage des PDU (Protocol Data Units) pour les requêtes SNMP (inverse par défaut).
# - L'encodage direct est utile dans de rares cas avec certains agents SNMP qui encode les requêtes à l'envers.
# - L'utilisation de ce paramètre est rarement nécessaire et doit activer avec prudence.
# reverseEncodeBER no

# -----------------------------
# Configuration SNMPv3
# -----------------------------

# - Définit le nom de sécurité par défaut utilisé pour les requêtes SNMPv3
# - Agit comme un nom d'utilisateur pour l'authentification des requête SNMPv3.
# - Ce paramètre peut être supplenté par l'option -u
# defSecurityName myuser

# - "defSecurityLevel" définit le niveau de sécurité par défaut utilisé pour les requêtes SNMPv3 (noAuthNoPriv, authNoPriv ou authPriv)
# -  noAuthNoPriv: Pas d'authentification et les requêtes sont envoyées en clair.
#  - authNoPriv: Le nom d'utilisateur est haché (MD5 ou SHA) avant d'être envoyé sur le réseau et utilisé
#                pour authentifier l'identité de l'expéditeur de la requête.
#                Les données de la requête ne sont pas chiffrées.
#  - authPriv:  le nom d'utilisateur est haché (MD5 ou SHA) pour vérifier l'identité de l'expéditeur.
#                Les donneés sont chiffrées avec DES, 3DES ou AES.
# - Ce paramètre peut être supplenté par l'option -l
# defSecurityLevel authNoPriv

# - "defPassphrase" définti une mot de passe par défaut
# - Utilisation non recommandée sauf en situation de test.
# defPassphrase mypassphrase

# - Passphrase d'authentification par défaut
# - Utilisé pour générer les clés de sécurité SNMPv3 utilisées pour l'authentification
# - Recommandé pour des environnements de production
# defAuthPassphrase myauthpassphrase

# - "defPrivPassphrase" permet de définir une phrase de passe pour chiffrer les données des requêtes SNMPv
# defPrivPassphrase myprivpassphrase

# - Type d'empreinte utilisé pour l'authentification par défaut (MD5 ou SHA)
# - Sans OpenSSL, seul l'authentification MD5 sera disponible et le chiffrement sera impossible.
# defAuthType SHA

# "defPrivType" définit le protocole de chiffrement par défaut utilisé pour chiffer des requêtes SNMP (DES ou AES)
# - Ce paramètre peut être supplenté par les options -a et -x

# defPrivType AES

# - "defContext" définit le contexte de sécurité par défaut appliqué à toutes les requêtes SNMPv3 qui ne sont pas explicitement définies.
# - Un contexte de sécurité est ensemble d'étiquettes qui définissent les droits d'accès d'un utilisateur ou d'un groupe d'utilisateurs SNMPv3 aux ressources SNMP.
# defContext mycontext

# - Définit le modèle de sécurité par défaut (doit être usm)
# defSecurityModel usm

# - Clé maître d'authentification par défaut (en format hexadécimal)
# - Utilisée pour générer des clés d'authentification pour les utilisateurs.
# - Si un utilisateur n'a pas de clé d'authentification définie, defAuthMasterKey est utilisée pour générer une clé à cet utilisateur.
# - La clé d'authentification générée est ensuite utilisée pour hacher les mots de passe de l'utilisateur.
# - Les clés d'authentification permettent de vérifier l'intégrité des messages SNMP et de s'assurer qu'ils proviennent d'une source fiable.
# defAuthMasterKey 0x0123456789ABCDEF

# - Définit la clé maître de confidentialité par défaut (en format hexadécimal)
# - Les clés de confidentialité cryptent les données des messages SNMP pour les protéger pendant la transmission.
# defPrivMasterKey 0xFEDCBA9876543210

# - Clé d'authentification localisée (?) par défaut (en format hexadécimal)
# --- documentation manquante; mais fait sans doute référence à une clé est spécifique d'un moteur SNMP (agent)
# defAuthLocalizedKey 0xAABBCCDDEEFF0011

# - Clé de confidentialité localisée (?) par défaut (en format hexadécimal)
# --- documentation manquante; mais fait sans doute référence à une clé est spécifique d'un moteur SNMP (agent)
# defPrivLocalizedKey 0x1122334455667788

# - "sshtosnmpsocketperms" indique où le chemin du le socket a surveiller pour les connexions SSH entrantes
# - qui seront ensuite traitées ou relayées par "snmpd"
# sshtosnmpsocketperms /var/run/sshtosnmp

# - "sshtosnmpsocketperms" définit les permissions du socket créé pour la communication entre l'agent SNMP et SSH
# sshtosnmpsocketperms 660 root root

# +---------------------------------------+
# | Configuration du comportement serveur |
# +---------------------------------------+

# Répertoire des paramètres persistants
# persistentDir /var/net-snmp

# Désactiver le chargement persistant (peut être yes ou no)
# noPersistentLoad yes

# Désactiver la sauvegarde persistante (peut être yes ou no)
# noPersistentSave yes

# Modèle de fichier temporaire
# tempFilePattern /tmp/snmpdXXXXXX

# Taille du tampon de réception serveur
# serverRecvBuf 8192

# Taille du tampon d'envoi serveur
# serverSendBuf 8192

# -----------------------------
# Gestion des MIB
# -----------------------------

# - Spécifie une liste de répertoires où rechercher les fichiers MIB.txt
# - Peut être remplacée par la variable d'environnement MIBDIRS et l'option -M.
# - Répertoire par défaut: /usr/local/share/snmp/mibs)
# - Exemple: mibdirs /usr/share/snmp/mib:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/iet
mibdirs /usr/share/snmp/mibs

# - Modules MIB à charger
# - Spécifie une liste de modules MIB (et non de fichiers) qui doivent être chargés.
# - Peut être remplacée par la variable d'environnement MIBS et l'option -m.
# - Exemple: mibs SNMPv2-MIB:IF-MIB:HOST-RESOURCES-MIB:TCP-MIB
# - Exemple: mibs ALL
mibs SNMPv2-MIB:IF-MIB:HOST-RESOURCES-MIB

# - "mibfile" permet de charger un fichier MIB.
# mibfile /usr/share/snmp/mibs/ietf/IF-MIB

# - Afficher sur la sortie standard les erreurs d'analyse des fichiers MIB
# - Valeur possible (1|yes|true|0|no|false)
# showMibErrors no

# - Traitement strict des commentaires ASN.1
# - Permet de choisir si les fichiers MIB avec des commentaires étendus seront considérer comme incorrects.
# - Valeurs possibles (yes ou no)
# commentToEOL yes

# - Autoriser les caractères spéciaux dans les noms d'objet MIB et les valeurs
# - même s'ils ne sont pas strictement conformes aux spécifications SNMP.
# - Peut être nécessaires pour prendre en charge certains équipements mais
# - peut également poser des problèmes d'interopérabilité.
# mibAllowUnderline yes

# - Niveau minimal d'avertissement lié aux traitements des MIB
# mibWarningLevel 5

# -----------------------------
#  Configuration de la sortie
# -----------------------------

# - Inclure des horodatages dans les logs (1|yes|true|0|no|false)
# logTimestamp yes

# "printNumericEnums" Affiche ou désactive les étiquettes symboliques pour les valeurs numériques (1|yes|true|0|no|false)
# Equivalent à l'option -Oe
# exemple de sortie avec: IP-MIB::ipForwarding.0 = INTEGER: forwarding(1)
# exemple de sortie sans: IP-MIB::ipForwarding.0 = INTEGER: 1
# printNumericEnums yes

# - Afficher les OIDs numériques (1|yes|true|0|no|false)
# - Equivalent à l'option -On
# - exemple de sortie avec: .1.3.6.1.2.1.1.3.0 = Timeticks: (5428) 0:00:54.28
# - exemple de sortie sans: DISMAN-EVENT-MIB::sysUpTimeInstance = Timeticks: (6226) 0:01:02.26
# printNumericOids yes

# Ne pas décomposer les OIDs (1|yes|true|0|no|false)
# - Equivalent à l'option -Ob
# - exemple de sortie avec: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1."comm1" = STRING: grpcomm1
# - exemple de sortie sans: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1.5.99.111.109.109.49 = STRING: grpcomm1
# dontBreakdownOids yes

# Échappement des guillemets (1|yes|true|0|no|false)
# - Equivalent à l'option -OE
# - exemple de sortie avec: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1.\"comm1\" = STRING: grpcomm1
# - exemple de sortie sans: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1."comm1" = STRING: grpcomm1
# escapeQuotes yes

# Affichage rapide (1|yes|true|0|no|false)
# - Supprime le type de données
# - Equivalent à l'option -Oq
# - exemple de sortie avec: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1."comm1" grpcomm1
# - exemple de sortie sans: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1."comm1" = STRING: grpcomm1
# quickPrinting yes

# Afficher uniquement les valeurs (1|yes|true|0|no|false)
# - Equivalent à l'option -Ov
# - exemple de sortie avec: STRING: grpcomm1
# - exemple de sortie sans: SNMP-VIEW-BASED-ACM-MIB::vacmGroupName.1."comm1" = STRING: grpcomm1
# printValueOnly yes

# Ne pas afficher les unités (1|yes|true|0|no|false)
# - Equivalent à l'option -OU
# dontPrintUnits yes

# Afficher les timeticks numériques (1|yes|true|0|no|false)
# - Equivalent à l'option -Ot
# numericTimeticks yes

# Afficher le texte hexadécimal (peut être yes ou no)
# - Equivalent à l'option -OT
# printHexText yes

# Longueur de ligne de sortie hexadécimale (entier positif, 0 pour désactiver les sauts de ligne)
# hexOutputLength 32

# Afficher le suffixe (peut être 0, 1 ou 2)
# suffixPrinting 2

# Format de sortie des OIDs (peut être 1, 2, 3, 4, 5 ou 6)
# oidOutputFormat 4

# Index étendu (1|yes|true|0|no|false)
# extendedIndex yes

# Désactiver les indices de type d'affichage (1|yes|true|0|no|false)
# noDisplayHint yes
